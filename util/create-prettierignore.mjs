import fs from 'fs';
import path from 'path';

function findGitignoreFiles(dir) {
  const files = fs.readdirSync(dir, { withFileTypes: true });
  const gitignoreFiles = [];

  for (const file of files) {
    const filePath = path.join(dir, file.name);
    if (file.isDirectory() && file.name !== 'node_modules') {
      gitignoreFiles.push(...findGitignoreFiles(filePath));
    } else if (file.name === '.gitignore') {
      console.log('reading', filePath);
      gitignoreFiles.push(filePath);
    }
  }

  return gitignoreFiles;
}

function createPrettierignore(folder) {
  const gitignoreFiles = findGitignoreFiles(folder);
  const prettierignorePath = path.join(folder, '.prettierignore');
  const prettierignoreContent = [
    '# Auto-generated by create-prettierignore.mjs',
    '# ignore lock-file\npnpm-lock.yaml',
  ];

  for (const gitignoreFile of gitignoreFiles) {
    const content = fs.readFileSync(gitignoreFile, 'utf-8');
    const relativePath = path.relative(folder, path.dirname(gitignoreFile));
    const prefixedContent = content
      .split('\n')
      .map((line) => line && path.join(relativePath, line).replace(/\\/g, '/'))
      .join('\n');
    prettierignoreContent.push(
      `# Content from ${gitignoreFile}\n${prefixedContent}`
    );
  }

  console.log('writing', prettierignorePath);
  fs.writeFileSync(prettierignorePath, prettierignoreContent.join('\n\n'));
}

createPrettierignore(process.cwd());
